class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        # reverse itteration to avoid using self by 'index()'; --that was why. index return the first ever element (similar to soup.find());
        # learned range (A,B,C) A is always the first one you want to run.
        n = len(nums)
        for i in range(0,n):
            y = target - nums[i]

            if y in nums[i+1:]: # vs. nums[i+1, n] same, but added n as extra computation
                return [i, nums.index (y)]
        
        
        
